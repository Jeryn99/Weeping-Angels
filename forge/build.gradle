plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

architectury {
    platformSetupLoomIde()
    neoForge();
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    runs {
        data {
            data()
            programArgs "--all", "--mod", "weeping_angels"
            programArgs "--output", project(":forge").file("src/generated/resources").absolutePath
            programArgs "--existing", project(":common").file("src/main/resources/").absolutePath
        }
    }
}

unifiedPublishing {
    project {
        displayName = "[NeoForge] Weeping Angels - v$project.version"
        releaseType = "release"
        changelog = new File("${rootProject.projectDir}/changelog.md").text
        gameVersions = ["1.21"]
        mainPublication tasks.remapJar
        gameLoaders = ["neoforge"]
        relations {

        }

        var CURSE_API_KEY = project.findProperty("curseforge") ?: System.getenv("curseforge") ?: ""
        if (CURSE_API_KEY != "") {
            curseforge {
                token = CURSE_API_KEY
                id = "291249"
                gameVersions.addAll "Java 21", "1.21"
            }
        }

        var MODRINTH_TOKEN = project.findProperty("modrinth") ?: System.getenv("modrinth") ?: ""
        if (MODRINTH_TOKEN != "") {
            modrinth {
                token = MODRINTH_TOKEN
                id = "TEzJJY7H"
                version = "neoforge-$project.version"
            }
        }
    }
}

repositories {
    maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
    maven { url "https://maven.neoforged.net/releases/" }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

dependencies {
    neoForge "net.neoforged:neoforge:${neoforge_version}"
    modCompileOnly "curse.maven:mc-vr-api-591092:4648734"
    modApi "curse.maven:architectury-api-419699:5521987"


    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "weeping_angels.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

sourceSets.main.resources {
    srcDir project(":forge").file("src/generated/resources").absolutePath
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = 'forge'
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}